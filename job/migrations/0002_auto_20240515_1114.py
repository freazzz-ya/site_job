# Generated by Django 3.2.4 on 2024-05-15 08:14

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('job', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Maling_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(error_messages={'unique': 'email существует уже'}, max_length=254, unique=True, verbose_name='email')),
            ],
            options={
                'verbose_name': 'Модель рассылки',
                'verbose_name_plural': 'Модели рассылки',
                'db_table': 'Maling_model',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Neural_network',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(error_messages={'unique': 'Название уже существует такое'}, help_text='Max 256', max_length=256, unique=True, verbose_name='Название')),
                ('image', models.ImageField(default='images/network/default_Uf.jpg', upload_to='images/network/', verbose_name='Изображение')),
                ('description', models.TextField(default='Дефолтное описание', help_text='Максимальная длинна - 1000 символов', max_length=10000, verbose_name='Описание')),
                ('url', models.URLField(verbose_name='Url адрес')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'neural network',
                'verbose_name_plural': 'neural networks',
                'ordering': ('date_joined',),
            },
        ),
        migrations.CreateModel(
            name='Other_Source_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256, unique=True, verbose_name='Подработка')),
                ('discription', models.TextField(default='Дефолтное описание', max_length=10000, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Другой ист дохода',
                'verbose_name_plural': 'Другие ист дохода',
                'db_table': 'Other_Source',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Сontacts_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=256, verbose_name='Фамилия')),
                ('email', models.EmailField(error_messages={'unique': 'email существует уже'}, max_length=254, unique=True, verbose_name='Майл')),
                ('discription', models.TextField(default='Дефолтное описание', max_length=10000, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Модель контактов',
                'verbose_name_plural': 'Модели контактов',
                'db_table': 'Сontacts_model',
                'ordering': ('id',),
            },
        ),
        migrations.AlterModelOptions(
            name='job',
            options={'ordering': ('id',), 'verbose_name': 'Основная мод работы', 'verbose_name_plural': 'Основные мод работы'},
        ),
        migrations.RemoveField(
            model_name='job',
            name='busyness',
        ),
        migrations.RemoveField(
            model_name='job',
            name='duration',
        ),
        migrations.RemoveField(
            model_name='job',
            name='name',
        ),
        migrations.RemoveField(
            model_name='job',
            name='payment',
        ),
        migrations.AddField(
            model_name='balance',
            name='worker',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='worker_balance', to='users.worker', verbose_name='Работник'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='job',
            name='discription',
            field=models.TextField(default='Дефолтное описание', max_length=10000, verbose_name='Описание'),
        ),
        migrations.AddField(
            model_name='job',
            name='title',
            field=models.CharField(default=1, max_length=256, unique=True, verbose_name='Работа'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='balance',
            name='amount_balance',
            field=models.DecimalField(decimal_places=2, max_digits=12, verbose_name='balance money'),
        ),
        migrations.AlterModelTable(
            name='job',
            table='Job',
        ),
        migrations.CreateModel(
            name='Temporary_expenses_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(default='Дефолтное описание для комментария', max_length=10000, verbose_name='Комментарий')),
                ('type_expenses', models.CharField(max_length=256, verbose_name='Тип расхода')),
                ('price', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(limit_value=0, message='Не может быть меньше 0'), django.core.validators.MaxValueValidator(limit_value=1000000000, message='Не может быть больше 1000000000')], verbose_name='Сума расходов')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='temporary_expenses', to=settings.AUTH_USER_MODEL, verbose_name='пользователь')),
            ],
            options={
                'verbose_name': 'Временные расходы',
                'db_table': 'Temporary_expenses_model',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Permanent_expenses_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(default='Дефолтное описание для комментария', max_length=10000, verbose_name='Комментарий')),
                ('type_expenses', models.CharField(max_length=256, verbose_name='Тип расхода')),
                ('price', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(limit_value=0, message='Не может быть меньше 0'), django.core.validators.MaxValueValidator(limit_value=1000000000, message='Не может быть больше 1000000000')], verbose_name='Сума расходов')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permanent_expenses', to=settings.AUTH_USER_MODEL, verbose_name='пользователь')),
            ],
            options={
                'verbose_name': 'Постоянный расход',
                'verbose_name_plural': 'Постоянные расходы',
                'db_table': 'Permanent_expenses_model',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Other_Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_in_money', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(limit_value=1, message='Не может быть меньше 1'), django.core.validators.MaxValueValidator(limit_value=1000000000, message='Не может быть больше 1000000000')], verbose_name='Оплата')),
                ('duration', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(limit_value=0, message='Не может быть меньше 0'), django.core.validators.MaxValueValidator(limit_value=30, message='Не может быть больше 1000000000')], verbose_name='сумма дней')),
                ('comment', models.TextField(default='Дефолтное описание для комментария', max_length=10000, verbose_name='Комментарий')),
                ('busyness', models.CharField(choices=[('Основная', 'Основная работа'), ('Подработка', 'Частичная занятость')], default='Подработка', max_length=256, verbose_name='Занятость')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, null=True, verbose_name='Дата')),
                ('other_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='other_sources', to='job.other_source_model', verbose_name='другие источники')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='other_sources', to=settings.AUTH_USER_MODEL, verbose_name='Работник')),
            ],
            options={
                'verbose_name': 'Другой источник оплаты',
                'verbose_name_plural': 'Другие источники оплаты',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Network_Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_in_money', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(limit_value=1, message='Не может быть меньше 1'), django.core.validators.MaxValueValidator(limit_value=1000000000, message='Не может быть больше 1000000000')], verbose_name='Оплата')),
                ('duration', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(limit_value=0, message='Не может быть меньше 0'), django.core.validators.MaxValueValidator(limit_value=30, message='Не может быть больше 1000000000')], verbose_name='сумма дней')),
                ('comment', models.TextField(default='Дефолтное описание для комментария', max_length=10000, verbose_name='Комментарий')),
                ('busyness', models.CharField(choices=[('Основная', 'Основная работа'), ('Подработка', 'Частичная занятость')], default='Подработка', max_length=256, verbose_name='Занятость')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, null=True, verbose_name='Дата')),
                ('network', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='networks', to='job.neural_network', verbose_name='нейросети')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='network', to=settings.AUTH_USER_MODEL, verbose_name='Работник')),
            ],
            options={
                'verbose_name': 'Нейросеть оплаты',
                'verbose_name_plural': 'Нейросети оплаты',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Mandatory_expenses_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(default='Дефолтное описание для комментария', max_length=10000, verbose_name='Комментарий')),
                ('type_expenses', models.CharField(max_length=256, verbose_name='Тип расхода')),
                ('price', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(limit_value=0, message='Не может быть меньше 0'), django.core.validators.MaxValueValidator(limit_value=1000000000, message='Не может быть больше 1000000000')], verbose_name='Сума расходов')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mandatory_expenses', to=settings.AUTH_USER_MODEL, verbose_name='пользователь')),
            ],
            options={
                'verbose_name': 'Обязателые расходы',
                'db_table': 'Mandatory_expenses_model',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Job_Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_in_money', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(limit_value=1, message='Не может быть меньше 1'), django.core.validators.MaxValueValidator(limit_value=1000000000, message='Не может быть больше 1000000000')], verbose_name='Оплата')),
                ('duration', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(limit_value=0, message='Не может быть меньше 0'), django.core.validators.MaxValueValidator(limit_value=30, message='Не может быть больше 1000000000')], verbose_name='сумма дней')),
                ('busyness', models.CharField(choices=[('Основная', 'Основная работа'), ('Подработка', 'Частичная занятость')], default='Подработка', max_length=256, verbose_name='Занятость')),
                ('total_amount', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(limit_value=1, message='Не может быть меньше 1'), django.core.validators.MaxValueValidator(limit_value=1000000000, message='Не может быть больше 1000000000')], verbose_name='Общая сумма')),
                ('comment', models.TextField(default='Дефолтное описание для комментария', max_length=10000, verbose_name='Комментарий')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='job.job', verbose_name='работы')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job', to=settings.AUTH_USER_MODEL, verbose_name='Работник')),
            ],
            options={
                'verbose_name': 'Работа',
                'verbose_name_plural': 'Работы',
                'db_table': 'job_payment',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Earning_scheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256, unique=True, verbose_name='Название схемы')),
                ('image', models.ImageField(default='images/money.jpg', upload_to='images/scheme/', verbose_name='Изображение')),
                ('url', models.URLField(blank=True, null=True, verbose_name='Url адрес площадки')),
                ('discription', models.TextField(default='Дефолтное описание', max_length=10000, verbose_name='Описание')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('network', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='network', to='job.neural_network', verbose_name='нейросети')),
                ('other_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='other_source', to='job.other_source_model', verbose_name='другие источники')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheme', to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
            ],
            options={
                'verbose_name': 'Схема заработка',
                'verbose_name_plural': 'Схемы заработка',
                'db_table': 'Earning_scheme',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Crypto_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256, verbose_name='Имя')),
                ('url', models.URLField(blank=True, null=True, verbose_name='Url адрес площадки')),
                ('course', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(limit_value=1, message='Не может быть меньше 1'), django.core.validators.MaxValueValidator(limit_value=1000000000, message='Не может быть больше 1000000000')], verbose_name='Общая сумма')),
                ('discription', models.CharField(default='Дефолтное описание', max_length=10000, verbose_name='Описание')),
                ('image', models.ImageField(default='images/money.jpg', upload_to='images/crypto/', verbose_name='Изображение')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последнее обновление')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crypto', to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
            ],
            options={
                'verbose_name': 'Модель криптовалюты',
                'verbose_name_plural': 'Модели криптовалют',
                'db_table': 'Crypto_model',
                'ordering': ('id',),
            },
        ),
    ]
